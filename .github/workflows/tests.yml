name: tests
on: [workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      mongodb:
        image: mongo:4.4.6
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
          MONGO_INITDB_DATABASE: testdb
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build baton-mongodb
        run: go build ./cmd/baton-mongodb
      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version
      - name: Initalize MongoDB
        run: |
          mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
            db = db.getSiblingDB('testdb');
            db.createUser({ user: 'mongodbuser', pwd: 'secretpassword', roles: [{ role: 'readWrite', db: 'testdb' }] })
            db.createCollection('connector');
          EOF
      - name: Run baton-mongodb-from-docker
        run: docker run --rm -v $(pwd):/out -e BATON_PUBLIC_KEY=jyzkthbd -e BATON_PRIVATE_KEY=3b14d374-68f7-4eb8-be60-fd3fd893743e ghcr.io/conductorone/baton-mongodb:latest -f "/out/sync.c1z"
      - name: Run baton-mongodb-cmd
        env:
          BATON_PUBLIC_KEY: 'jyzkthbd'
          BATON_PRIVATE_KEY: '3b14d374-68f7-4eb8-be60-fd3fd893743e'
        run: ./baton-mongodb 
    # ...  